name: Manage Azure VM

on:
  schedule:
    - cron: '0 18 * * *'   
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Stop Azure VM
        run: |
          az vm deallocate --resource-group ${{ secrets.AZURE_RESOURCE_GROUP_NAME }} --name ${{ secrets.AZURE_VM_NAME }}
          sleep 3

      - name: Start Azure VM
        run: |
          az vm start --resource-group ${{ secrets.AZURE_RESOURCE_GROUP_NAME }} --name ${{ secrets.AZURE_VM_NAME }}

      - name: Get VM Public IP
        id: get-ip
        run: |
          ip=$(az vm show -d -g ${{ secrets.AZURE_RESOURCE_GROUP_NAME }} -n ${{ secrets.AZURE_VM_NAME }} --query publicIps -o tsv)
          echo "::set-output name=ip::$ip"

      - name: Update Personal.conf file
        run: |
          mkdir Proxy
          cd Proxy
          wget "https://m.yvan.eu.org/d/私人/Proxy/Clash.yaml"
          wget "https://m.yvan.eu.org/d/私人/Proxy/Surfboard.conf"
          wget "https://m.yvan.eu.org/d/私人/Proxy/config.json"
          sed -i "14s/.*/Personal = vmess, $(echo ${{ steps.get-ip.outputs.ip }}), 56765, username = a2e63327-6af8-4381-9a53-78cd756a5a90, tls = false, vmess-aead = false, skip-cert-verify = true, sni = , tfo = false, sni = " Surfboard.conf
          sed -i "4s/.*/  \"add\": \"$(echo ${{ steps.get-ip.outputs.ip }})\",/" config.json
          sed -i "81s/.*/  - {\"name\":\"Personal\",\"type\":\"vmess\",\"server\":\"$(echo ${{ steps.get-ip.outputs.ip }})\",\"port\":56765,\"cipher\":\"auto\",\"uuid\":\"a2e63327-6af8-4381-9a53-78cd756a5a90\",\"alterId\":0,\"tls\":false,\"skip-cert-verify\":true,\"servername\":\"\",\"network\":\"tcp\"}/" Clash.yaml

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Generate V2Ray Subscribe Link
      run: |
        mv ${{ github.workspace }}/Proxy/config.json ./
        python generate_subscribe_link.py
        mv V2ray.txt ${{ github.workspace }}/Proxy/
      working-directory: ${{ github.workspace }}/Transfer

      - name: Upload Proxy Files
        run: |
          cd OnedriveCli
          wget "https://m.yvan.eu.org/d/%E7%A7%81%E4%BA%BA/Proxy/auth.json"
          chmod +x OneDriveUploader
          ./OneDriveUploader -s "${{ github.workspace }}/Proxy" -r "Personal_Interest"

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Send Email Notification
        env:
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          TO_EMAILS: ${{ secrets.TO_EMAILS }}
        run: |
          python - <<EOF
          import smtplib
          from email.mime.text import MIMEText
          import os
          SMTP_SERVER = os.environ["SMTP_SERVER"]
          SMTP_PORT = os.environ["SMTP_PORT"]
          SMTP_USERNAME = os.environ["SMTP_USERNAME"]
          SMTP_PASSWORD = os.environ["SMTP_PASSWORD"]
          TO_EMAILS = os.environ["TO_EMAILS"].split(',')
          msg = MIMEText("VPN IP地址已更新，更新为：${{ steps.get-ip.outputs.ip }}")
          msg["Subject"] = "Azure VM IP Address"
          msg["From"] = SMTP_USERNAME
          msg["To"] = ', '.join(TO_EMAILS)
          server = smtplib.SMTP(SMTP_SERVER, SMTP_PORT)
          server.starttls()
          server.login(SMTP_USERNAME, SMTP_PASSWORD)
          server.sendmail(SMTP_USERNAME, TO_EMAILS, msg.as_string())
          server.quit()
          EOF
